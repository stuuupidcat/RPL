error: it is unsound to cast any slice `&[T]` to a byte slice `&[u8]`
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:27:13
   |
LL | /             core::slice::from_raw_parts(
LL | |
LL | |
LL | |                 slice.as_ptr() as *const _,
LL | |                 slice.len() * core::mem::size_of::<T>(),
LL | |             )
   | |_____________^ casted to a byte slice here
   |
note: trying to cast from this value of `&[T]` type
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:24:21
   |
LL |         let slice = self.as_slice();
   |                     ^^^^^^^^^^^^^^^
   = note: `#[deny(rpl::unsound_slice_cast)]` on by default

error: it is unsound to cast any slice `&mut [T]` to a byte slice `&mut [u8]`
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:44:13
   |
LL | /             core::slice::from_raw_parts_mut(
LL | |
LL | |                 slice.as_mut_ptr() as *mut _,
LL | |                 slice.len() * core::mem::size_of::<T>(),
LL | |             )
   | |_____________^ casted to a byte slice here
   |
note: trying to cast from this value of `&mut [T]` type
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:41:21
   |
LL |         let slice = self.as_mut_slice();
   |                     ^^^^^^^^^^^^^^^^^^^

error: it usually isn't necessary to apply #[inline] to generic functions
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:18:5
   |
LL |       #[inline]
   |       --------- `#[inline]` here
LL | /     fn as_bytes(&self) -> &[u8] {
...  |
LL | |     }
   | |_____^ `#[inline]` applied here
   |
   = help: See https://matklad.github.io/2021/07/09/inline-in-rust.html and https://rustc-dev-guide.rust-lang.org/backend/monomorph.html
   = note: generic functions are always `#[inline]` (monomorphization)
   = note: `-D rpl::generic-function-marked-inline` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(rpl::generic_function_marked_inline)]`

error: it usually isn't necessary to apply #[inline] to generic functions
  --> tests/ui/cve_2020_25016/cve_2020_25016.rs:37:5
   |
LL |       #[inline]
   |       --------- `#[inline]` here
LL | /     fn as_bytes_mut(&mut self) -> &mut [u8] {
...  |
LL | |     }
   | |_____^ `#[inline]` applied here
   |
   = help: See https://matklad.github.io/2021/07/09/inline-in-rust.html and https://rustc-dev-guide.rust-lang.org/backend/monomorph.html
   = note: generic functions are always `#[inline]` (monomorphization)

error: aborting due to 4 previous errors

